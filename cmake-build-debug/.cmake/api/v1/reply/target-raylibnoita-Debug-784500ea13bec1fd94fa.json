{
	"artifacts" : 
	[
		{
			"path" : "raylibnoita"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"target_link_libraries",
			"set_target_properties",
			"find_package",
			"target_compile_definitions"
		],
		"files" : 
		[
			"CMakeLists.txt",
			"/usr/lib/cmake/raylib/raylib-config.cmake"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 6,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 7,
				"parent" : 0
			},
			{
				"command" : 3,
				"file" : 0,
				"line" : 5,
				"parent" : 0
			},
			{
				"file" : 1,
				"parent" : 3
			},
			{
				"command" : 2,
				"file" : 1,
				"line" : 63,
				"parent" : 4
			},
			{
				"command" : 4,
				"file" : 0,
				"line" : 9,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g -fdiagnostics-color=always"
				}
			],
			"defines" : 
			[
				{
					"backtrace" : 6,
					"define" : "ASSETS_PATH=\"/home/roxie/CLionProjects/raylibnoita/assets/\""
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					1
				],
				"standard" : "17"
			},
			"sourceIndexes" : 
			[
				0
			]
		}
	],
	"id" : "raylibnoita::@6890427a1f51a3e7e1df",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			},
			{
				"backtrace" : 2,
				"fragment" : "/usr/lib/libraylib.so",
				"role" : "libraries"
			},
			{
				"backtrace" : 5,
				"fragment" : "-L/usr/lib -lraylib",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "raylibnoita",
	"nameOnDisk" : "raylibnoita",
	"paths" : 
	{
		"build" : ".",
		"source" : "."
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "main.cpp",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
